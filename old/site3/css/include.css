/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
/* Document
   ========================================================================== */
/**
 * 1. Correct the line height in all browsers.
 * 2. Prevent adjustments of font size after orientation changes in iOS.
 */
html {
  line-height: 1.15;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers.
 */
body {
  margin: 0; }

/**
 * Render the `main` element consistently in IE.
 */
main {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * Remove the gray background on active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * 1. Remove the bottom border in Chrome 57-
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10.
 */
img {
  border-style: none; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers.
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * Correct the inability to style clickable types in iOS and Safari.
 */
button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Correct the padding in Firefox.
 */
fieldset {
  padding: 0.35em 0.75em 0.625em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Remove the default vertical scrollbar in IE 10+.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10.
 * 2. Remove the padding in IE 10.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in Edge, IE 10+, and Firefox.
 */
details {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Misc
   ========================================================================== */
/**
 * Add the correct display in IE 10+.
 */
template {
  display: none; }

/**
 * Add the correct display in IE 10.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: Bebas;
  src: url("../fonts/Bebas Neue Pro Bold.otf");
  font-style: normal;
  font-weight: normal; }

@font-face {
  font-family: Geometria;
  src: url("../fonts/Geometria.ttf");
  font-style: normal;
  font-weight: normal; }

* {
  font-family: Bebas; }

.width {
  max-width: 1600px;
  width: 100%;
  margin: 0 auto; }

header {
  background-image: url("../images/header.webp");
  background-position: center;
  background-repeat: no-repeat;
  background-color: black;
  min-height: 225px;
  height: 100%;
  display: flex;
  align-items: flex-end; }
  header nav {
    color: white; }
    header nav ul {
      list-style-type: none;
      padding-left: 0;
      margin-left: 0;
      display: flex;
      justify-content: flex-end;
      padding-right: 117px; }
      header nav ul a {
        color: #fff !important;
        text-decoration: none; }
      header nav ul li {
        font-weight: 400;
        letter-spacing: 2.9px;
        font-size: 30px;
        padding-right: 39px;
        line-height: 0.6;
        text-transform: uppercase; }
      header nav ul li:hover {
        color: #F2A81B;
        cursor: pointer; }

main {
  flex-wrap: wrap; }
  main .textMain {
    padding-top: 77.5px;
    padding-bottom: 0; }
    main .textMain__h1 h1 {
      padding-left: 37px;
      text-transform: uppercase;
      font-size: 239px;
      text-align: center;
      margin: 0;
      letter-spacing: 36.8px;
      line-height: 1; }
    main .textMain__text {
      text-align: center;
      letter-spacing: 6px;
      font-size: 60px;
      padding-top: 0;
      padding-left: 6px;
      text-transform: uppercase; }
  main .fourpack {
    padding-top: 112px;
    display: flex;
    flex-wrap: nowrap;
    justify-content: space-evenly;
    justify-content: center; }
    main .fourpack__main {
      text-align: center;
      padding: 0 33px; }
      main .fourpack__main .pigandtextmove {
        margin-top: -300px;
        height: 230px; }
      main .fourpack__main__imgpacks__pack {
        height: 422px;
        z-index: 10;
        position: relative; }
      main .fourpack__main__imgpig__pig {
        margin-top: 57px; }
      main .fourpack__main__textbig {
        margin-top: 30px;
        font-size: 30px;
        letter-spacing: 3px;
        text-transform: uppercase; }
      main .fourpack__main__textlit {
        font-family: Geometria;
        margin-top: 12px;
        font-size: 14px;
        letter-spacing: 0.1em; }
  main .twoimgs {
    min-height: 100%;
    width: 100%; }
  main .twoimg {
    margin-top: 174px; }
    main .twoimg__img1 {
      position: relative;
      width: 100%; }
      main .twoimg__img1__img {
        object-fit: cover;
        object-position: 0% 0%;
        position: absolute;
        height: 0px;
        width: 100%;
        z-index: 15; }
  main .twobecons .twobecon {
    display: flex;
    height: 100%; }
    main .twobecons .twobecon__left {
      width: 50%; }
      main .twobecons .twobecon__left__text {
        padding-top: 151px;
        padding-left: 246px;
        width: 482px;
        font-size: 46px;
        letter-spacing: 1.7px;
        padding-bottom: 168px;
        text-transform: uppercase; }
    main .twobecons .twobecon__right {
      width: 50%; }
      main .twobecons .twobecon__right__img {
        margin-top: 11.6%;
        margin-left: 37.8%; }
    main .twobecons .twobecon__textover {
      position: absolute;
      font-size: 235px;
      color: #F2A81B;
      transform: translate(20.4%, -19.3%);
      letter-spacing: 38.1px;
      opacity: 0.5;
      z-index: 0;
      text-transform: uppercase; }
  main .historys {
    background-color: #E6AC42; }
    main .historys .history {
      display: flex; }
      main .historys .history__left {
        width: 50%; }
        main .historys .history__left__img img {
          margin-top: 10%;
          margin-left: 13%; }
      main .historys .history__right {
        width: 50%;
        padding-top: 106px;
        padding-bottom: 110px;
        letter-spacing: 1.6px; }
        main .historys .history__right__text {
          font-family: Geometria;
          font-size: 16px;
          line-height: 150%; }
          main .historys .history__right__text span {
            font-family: Geometria; }
  main .fulltext {
    text-transform: uppercase;
    text-align: center;
    margin-top: 21px;
    font-size: 152px;
    letter-spacing: 14.3px;
    padding-left: 11px; }
  main .friends {
    margin-top: 25px; }
    main .friends .friend {
      display: flex; }
      main .friends .friend__friend__img {
        background-image: url("../images/friends.webp"); }
      main .friends .friend__some__img {
        background-image: url("../images/some.webp"); }
      main .friends .friend__friend, main .friends .friend__some {
        width: 50%; }
        main .friends .friend__friend__img, main .friends .friend__some__img {
          background-size: cover;
          background-repeat: no-repeat;
          min-height: 800px;
          display: flex;
          align-items: center;
          justify-content: center; }
          main .friends .friend__friend__img span, main .friends .friend__some__img span {
            text-transform: uppercase;
            text-shadow: 0 0 5px black;
            letter-spacing: 15px;
            color: white;
            font-size: 150px; }
  main .video {
    margin-top: 87px;
    text-align: center; }
    main .video .width {
      width: 1200px;
      height: 620px; }
  main .links {
    background-color: #E6AC42;
    margin-top: 70px;
    padding-top: 88px;
    padding-bottom: 88px; }
    main .links .link {
      display: flex;
      flex-wrap: wrap;
      justify-content: center; }
      main .links .link-text {
        text-align: center;
        text-transform: uppercase;
        font-size: 30px;
        letter-spacing: 3px; }
      main .links .link-icon {
        padding-top: 36px;
        text-align: center; }
        main .links .link-icon img {
          padding: 0 15px;
          width: 100px;
          height: 100px; }

footer {
  padding-top: 10px;
  padding-bottom: 15px;
  font-family: Geometria;
  background-color: black;
  color: white;
  font-size: 16px;
  text-align: center;
  letter-spacing: 1.6px; }
  footer b {
    font-family: Geometria; }

@media screen and (max-width: 400px) {
  main .fourpack {
    padding-top: 88px;
    flex-direction: column; }
    main .fourpack__main {
      padding-bottom: 30px !important; }
      main .fourpack__main__imgpacks__pack {
        width: 60vw !important;
        height: auto; }
      main .fourpack__main__imgpig__pig {
        width: 60vw !important;
        height: auto !important;
        margin-top: 25px !important; }
      main .fourpack__main__textbig {
        margin-top: 20px;
        font-size: 10vw !important; }
      main .fourpack__main__textlit {
        margin-top: 8px;
        font-size: 5vw !important; }
  main .twobecons .twobecon__left__text {
    width: 139px !important;
    padding-top: 21px !important;
    padding-left: 9px !important;
    font-size: 15px !important;
    padding-bottom: 20px !important; }
  main .twobecons .twobecon__right__img img {
    width: 70px !important; }
  main .twobecons .twobecon__textover {
    font-size: 34px !important;
    transform: translate(-0.9%, -19.3%) !important;
    letter-spacing: 15.1px !important; } }

@media screen and (min-width: 400px) and (max-width: 600px) {
  .twobecons .twobecon__left__text {
    width: 184px !important;
    padding-top: 21px !important;
    padding-left: 54px !important;
    font-size: 15px !important;
    padding-bottom: 40px !important; }
  .twobecons .twobecon__right__img {
    margin-top: 5.6% !important;
    margin-left: 28.8% !important; }
    .twobecons .twobecon__right__img img {
      width: 70px !important; }
  .twobecons .twobecon__textover {
    font-size: 35px !important;
    transform: translate(20.1%, -19.3%);
    letter-spacing: 17.1px !important; } }

@media screen and (max-width: 600px) {
  .width {
    max-width: 600px; }
  header {
    padding-top: 20px;
    padding-bottom: 20px;
    display: block;
    min-height: 0; }
    header nav ul {
      margin: 0;
      padding: 0;
      flex-direction: column;
      text-align: center; }
      header nav ul li {
        padding-right: 0;
        line-height: 1; }
  main .textMain {
    padding-top: 20px; }
    main .textMain__h1 h1 {
      padding: 0;
      font-size: 30vw;
      letter-spacing: 2vw;
      padding-left: 2vw; }
    main .textMain__text {
      padding: 0;
      letter-spacing: 4px;
      font-size: 5vw; }
  main .fourpack {
    padding-top: 40px;
    flex-wrap: wrap; }
    main .fourpack__main {
      padding: 0 0 40px; }
      main .fourpack__main__imgpacks__pack {
        width: 48vw;
        height: auto; }
      main .fourpack__main__imgpig__pig {
        margin-top: 20px;
        width: 40vw; }
      main .fourpack__main__textbig {
        margin-top: 10px;
        font-size: 25px; }
      main .fourpack__main__textlit {
        margin-top: 8px;
        font-size: 12px; }
  main .friends {
    margin-top: 10px !important; }
    main .friends .friend {
      flex-wrap: wrap; }
      main .friends .friend__friend, main .friends .friend__some {
        width: 100%; }
        main .friends .friend__friend__img, main .friends .friend__some__img {
          min-height: 100vw !important; }
          main .friends .friend__friend__img span, main .friends .friend__some__img span {
            letter-spacing: 7px;
            font-size: 15vw !important; } }

@media screen and (min-width: 600px) and (max-width: 900px) {
  header {
    min-height: 180px;
    background-size: 1281px 100%; }
    header nav ul {
      padding-right: 0;
      justify-content: space-around; }
      header nav ul li {
        font-size: 24px;
        padding-right: 0;
        letter-spacing: 2.6px;
        line-height: 0.4; }
  main .twobecons .twobecon__left__text {
    width: 244px !important;
    padding-top: 42px !important;
    padding-left: 104px !important;
    font-size: 21px !important;
    padding-bottom: 40px; }
  main .twobecons .twobecon__right__img img {
    width: 100px !important; }
  main .twobecons .twobecon__textover {
    font-size: 70px !important;
    transform: translate(20.1%, -19.3%);
    letter-spacing: 31.1px; }
  main .links .link-icon img {
    width: 75px;
    height: 75px; } }

@media screen and (max-width: 900px) {
  .fourpack__main {
    text-align: center;
    padding: 0 5px !important; }
    .fourpack__main .pigandtextmove {
      height: auto !important; }
  .historys .history {
    flex-wrap: wrap;
    justify-content: center; }
    .historys .history__left {
      width: 100% !important; }
      .historys .history__left__img {
        text-align: center; }
        .historys .history__left__img img {
          margin-top: 10% !important;
          margin-left: 0 !important;
          width: 95%; }
    .historys .history__right {
      text-align: center;
      width: 90% !important;
      padding-top: 10px !important;
      padding-bottom: 20px !important; }
      .historys .history__right__text {
        font-size: 12.2px;
        line-height: 160%; }
        .historys .history__right__text span br {
          display: none; }
  .fulltext {
    margin-top: 10px !important;
    font-size: 10vw !important;
    letter-spacing: 3px !important; } }

@media screen and (min-width: 900px) and (max-width: 1280px) {
  .fourpack__main .pigandtextmove {
    margin: auto 10px; }
  .fourpack__main__textbig {
    margin-top: 10px !important; }
  .twoimg {
    margin-top: 50px !important; }
  .twobecons .twobecon__left__text {
    width: 330px !important;
    padding-top: 70px !important;
    padding-left: 150px !important;
    font-size: 30px !important;
    padding-bottom: 100px !important; }
  .twobecons .twobecon__right__img img {
    width: 180px !important; }
  .twobecons .twobecon__textover {
    font-size: 120px !important;
    transform: translate(20.1%, -19.3%);
    letter-spacing: 31.1px; }
  .historys .history__left__img img {
    margin-top: 20% !important;
    margin-left: 3% !important;
    width: 95%; }
  .historys .history__right {
    padding-top: 87px;
    padding-bottom: 86px; }
    .historys .history__right__text {
      font-size: 12.2px;
      line-height: 160%; }
      .historys .history__right__text span br {
        display: none; }
  .fulltext {
    font-size: 10vw !important; } }

@media screen and (min-width: 601px) and (max-width: 1280px) {
  main .textMain {
    padding-top: 20px; }
    main .textMain__h1 h1 {
      padding: 0;
      font-size: 200px;
      letter-spacing: 2vw;
      padding-left: 2vw; }
    main .textMain__text {
      padding: 0;
      letter-spacing: 4px;
      font-size: 5vw;
      padding-left: 1vw; }
  main .fourpack {
    padding-top: 40px;
    padding-bottom: 10px; }
    main .fourpack__main__imgpacks__pack {
      width: 100%;
      height: auto; }
    main .fourpack__main__imgpig__pig {
      margin-top: 45px;
      width: 70%;
      height: auto; }
    main .fourpack__main__textbig {
      margin-top: 20px;
      font-size: 25px; }
    main .fourpack__main__textlit {
      margin-top: 8px;
      font-size: 12px; }
  main .twoimg {
    margin-top: 0; }
    main .twoimg__img1 {
      height: 25vw; }
      main .twoimg__img1__img {
        width: 100%; }
    main .twoimg__img2 {
      height: 15vw; }
      main .twoimg__img2__img {
        width: 100%;
        top: -25vw; }
  main .friends .friend__friend__img, main .friends .friend__some__img {
    min-height: 50vw !important; }
    main .friends .friend__friend__img span, main .friends .friend__some__img span {
      letter-spacing: 12px;
      font-size: 9vw !important; } }

@media screen and (max-width: 1280px) {
  main .twoimg {
    margin-top: 0; }
    main .twoimg__img1 {
      height: 25vw; }
      main .twoimg__img1__img {
        width: 100%; }
    main .twoimg__img2 {
      height: 15vw; }
      main .twoimg__img2__img {
        width: 100%;
        top: -25vw; }
  main .video {
    margin-top: 72px;
    text-align: center; }
    main .video .width {
      width: 100vw;
      height: 50vw !important; } }

@media screen and (min-width: 1280px) and (max-width: 1600px) {
  .width {
    max-width: 1280px; }
  header {
    min-height: 180px;
    background-size: 1281px 100%; }
    header nav ul {
      padding-right: 95px; }
      header nav ul li {
        font-size: 24px;
        padding-right: 29px;
        letter-spacing: 2.6px;
        line-height: 0.4; }
  main .textMain {
    padding-top: 63.5px; }
    main .textMain__h1 h1 {
      padding-left: 29px;
      font-size: 190px;
      letter-spacing: 30px; }
    main .textMain__text {
      letter-spacing: 4px;
      font-size: 50px; }
  main .fourpack {
    padding-top: 88px; }
    main .fourpack__main__imgpacks__pack {
      height: 337px; }
    main .fourpack__main__imgpig__pig {
      margin-top: 45px;
      height: 85px; }
    main .fourpack__main__textbig {
      margin-top: 20px;
      font-size: 25px; }
    main .fourpack__main__textlit {
      margin-top: 8px;
      font-size: 12px; }
  main .twoimg {
    margin-top: 61px; }
    main .twoimg__img1 {
      max-height: 324px; }
      main .twoimg__img1__img {
        width: 100%; }
    main .twoimg__img2__img {
      width: 100%;
      top: -324px; }
  main .twobecons .twobecon__left__text {
    width: 400px;
    padding-top: 120px;
    padding-left: 195px;
    font-size: 37px;
    letter-spacing: 1.4px;
    padding-bottom: 132px; }
  main .twobecons .twobecon__right__img img {
    width: 204px; }
  main .twobecons .twobecon__textover {
    font-size: 187px;
    transform: translate(20.1%, -19.3%);
    letter-spacing: 31.1px; }
  main .historys .history__left__img img {
    width: 497px; }
  main .historys .history__right {
    padding-top: 87px;
    padding-bottom: 86px; }
    main .historys .history__right__text {
      font-size: 12.2px;
      line-height: 160%; }
  main .fulltext {
    margin-top: 19px;
    font-size: 120px;
    letter-spacing: 12px; }
  main .friends {
    margin-top: 20px; }
    main .friends .friend__friend__img, main .friends .friend__some__img {
      min-height: 640px; }
      main .friends .friend__friend__img span, main .friends .friend__some__img span {
        letter-spacing: 12px;
        font-size: 120px; }
  main .video {
    margin-top: 72px;
    text-align: center; }
    main .video .width {
      width: 960px;
      height: 500px; }
  main .links {
    margin-top: 52px;
    padding-top: 72px;
    padding-bottom: 70px; }
    main .links .link-text {
      font-size: 23px; }
    main .links .link-icon {
      padding-top: 31px; }
      main .links .link-icon img {
        width: 75px;
        height: 75px; }
  footer {
    font-size: 12px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
